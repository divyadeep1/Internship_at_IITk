from OpenGL.GL import *
from OpenGL.GL.ARB import *
from OpenGL.GLU import *
from OpenGL.GLUT import *
from OpenGL.GLUT.special import *
from OpenGL.GL.shaders import *

import params
import glm
import pandas as pd
import numpy as np
import math

null = c_void_p(0)

class Cube():
	def __init__(self, Shader):

		e = pd.read_csv("quads.csv").as_matrix().reshape(-1)
		v = pd.read_csv("points.csv").as_matrix()
		self.vertices = []
		for i in e:
			self.vertices.append(v[i])
		self.vertices = np.array(self.vertices).reshape(-1)
		self.colors = [ 0.91568338,  0.49680021,  0.90968181,  0.09534293,  0.04982589,
        0.02445231,  0.39785245,  0.22330108,  0.46942229,  0.06066944,
        0.51296658,  0.9472511 ,  0.79113011,  0.48491322,  0.2398784 ,
        0.45920253,  0.91911896,  0.15087701,  0.97241765,  0.16717829,
        0.60998248,  0.11328889,  0.06392437,  0.03005021,  0.44850105,
        0.11865601,  0.20755516,  0.04567309,  0.40668408,  0.23042511,
        0.55887863,  0.41032017,  0.68558322,  0.41967932,  0.7980496 ,
        0.46831987,  0.34683816,  0.77184893,  0.03237712,  0.50893671,
        0.61117161,  0.0159669 ,  0.01714785,  0.3805519 ,  0.06962982,
        0.79174974,  0.84074367,  0.07011479,  0.3646257 ,  0.92057962,
        0.76731817,  0.51631322,  0.23050045,  0.94050073,  0.33974371,
        0.12442625,  0.86191255,  0.94276992,  0.36754337,  0.80905973,
        0.92404644,  0.70731593,  0.11385609,  0.77941259,  0.37594594,
        0.06430668,  0.26537783,  0.82253795,  0.12632354,  0.52321131,
        0.65633752,  0.98731183,  0.84248655,  0.81555484,  0.90204034,
        0.43548142,  0.08900309,  0.41048247,  0.63902019,  0.32643623,
        0.89943023,  0.70871008,  0.34213967,  0.4889162 ,  0.3002483 ,
        0.70109069,  0.46132069,  0.75955613,  0.70843745,  0.27336369,
        0.93769806,  0.90545423,  0.87845426,  0.93085689,  0.53604069,
        0.21665953,  0.78282357,  0.72068799,  0.72694106,  0.70109645,
        0.87505366,  0.05505852,  0.84903307,  0.35124789,  0.8901153 ,
        0.13644471,  0.56918178,  0.61099021,  0.10660996,  0.72874218,
        0.68373954,  0.2952849 ,  0.61918651,  0.39666175,  0.42808038,
        0.63257345,  0.45311825,  0.80163117,  0.44194658,  0.42603978,
        0.49989456,  0.10588657,  0.46015639,  0.04917547,  0.00583926,
        0.42177155,  0.06802744,  0.0960561 ,  0.83827119,  0.69665341,
        0.11082056,  0.03863782,  0.03576767,  0.93059391,  0.05634093,
        0.97142304,  0.15716227,  0.17988482,  0.98187538,  0.19748536,
        0.44838174,  0.60675422,  0.725003  ,  0.98096161,  0.31770776,
        0.56632049,  0.23183948,  0.73719917,  0.0404808 ,  0.96663216,
        0.7910819 ,  0.93546545,  0.18825715,  0.02065652,  0.30293591,
        0.92254917,  0.22547431,  0.16085699,  0.3233334 ,  0.66730925,
        0.35437618,  0.4109859 ,  0.3968315 ,  0.26172892,  0.19837402,
        0.55077579,  0.22694396,  0.50541497,  0.87084443,  0.25621882,
        0.05072586,  0.89258463,  0.08072622,  0.40892716,  0.60861804,
        0.9212251 ,  0.06681568,  0.63615895,  0.44419016,  0.79527834,
        0.12767975,  0.7769709 ,  0.11580329,  0.68660295,  0.81439291,
        0.17967678,  0.87670547,  0.01910857,  0.59653626,  0.78725688,
        0.28025227,  0.76848383,  0.7908108 ,  0.46379488,  0.17691865,
        0.61221664,  0.03234148,  0.94807289,  0.37274832,  0.42574698,
        0.64053515,  0.36117445,  0.0660402 ,  0.50762408,  0.83083056,
        0.64379559,  0.49320626,  0.03103899,  0.31222987,  0.06199199,
        0.16203977,  0.78667953,  0.89471639,  0.31040064,  0.28835254,
        0.44785235,  0.4711412 ,  0.48543416,  0.02536224,  0.0209233 ,
        0.67013822,  0.51785296,  0.17932668,  0.27639856,  0.43886303,
        0.79553648,  0.44059793,  0.78301826,  0.36641862,  0.54803381,
        0.75176158,  0.59550915,  0.33395257,  0.04125666,  0.59019602,
        0.80711332,  0.93982133,  0.22754994,  0.7075492 ,  0.67737485,
        0.17887573,  0.61143958,  0.77654878,  0.31480992,  0.16838689,
        0.45246876,  0.938137  ,  0.26007384,  0.54874047,  0.30861556,
        0.15237217,  0.79031103,  0.3054901 ,  0.95383973,  0.37857896,
        0.67078945,  0.88430779,  0.97900622,  0.42154352,  0.19023037,
        0.10960722,  0.83530291,  0.89176744,  0.6374136 ,  0.18975718,
        0.12761703,  0.60732874,  0.59651558,  0.22114154,  0.69655785,
        0.66949837,  0.22044275,  0.1695568 ,  0.33990308,  0.00558769,
        0.78630561,  0.21457178,  0.2545002 ,  0.06595993,  0.69321279,
        0.24567559,  0.0215634 ,  0.28148205,  0.73790817,  0.31540909,
        0.32152851,  0.25208411,  0.90920075,  0.81639206,  0.13322663,
        0.7462023 ,  0.03127205,  0.79338919,  0.02718302,  0.94109994,
        0.27419425,  0.12358878,  0.89417764,  0.85358139,  0.11924228,
        0.83649767,  0.8046959 ,  0.7253    ,  0.91847013,  0.67436708,
        0.18018869,  0.3606019 ,  0.24836594,  0.81884327,  0.60009959,
        0.18604582,  0.33828197,  0.37585809,  0.19671983,  0.93015141,
        0.49077335,  0.31595957,  0.58265367,  0.10062028,  0.14816625,
        0.22905613,  0.91428002,  0.66109774,  0.82312917,  0.12475673,
        0.27327633,  0.55530434,  0.88115622,  0.90430268,  0.2761871 ,
        0.10929239,  0.40457284,  0.12620829,  0.96877823,  0.79079276,
        0.29321371,  0.86665023,  0.4803788 ,  0.82735456,  0.74702487,
        0.56314775,  0.01711956,  0.81495157,  0.61363474,  0.76948552,
        0.72006776,  0.3227206 ,  0.01695013,  0.3510314 ,  0.3218578 ,
        0.09204781,  0.62543445,  0.19822426,  0.87487488,  0.1753555 ,
        0.69921268,  0.07008506,  0.99486432,  0.71347207,  0.45573706,
        0.9635901 ,  0.71705041,  0.70128948,  0.30280597,  0.50436542,
        0.15949873,  0.68670153,  0.3265228 ,  0.62548987,  0.32998524,
        0.51021154,  0.6729169 ,  0.90952265,  0.44618441,  0.25845358,
        0.28705364,  0.39761427,  0.40478525,  0.62154628,  0.18386473,
        0.95938913,  0.39287693,  0.16112834,  0.42043231,  0.27417395,
        0.57303938,  0.36271344,  0.29309918,  0.30952767,  0.25381945,
        0.53499463,  0.60384711,  0.17449697,  0.46637962,  0.32693743,
        0.36222048,  0.81264085,  0.00250163,  0.47855894,  0.49732322,
        0.66748781,  0.36582341,  0.12376629,  0.61200752,  0.48358759,
        0.67857548,  0.53409357,  0.36059417,  0.52877285,  0.86543439,
        0.85247293,  0.30377237,  0.34155351,  0.68802159,  0.96706696,
        0.45438758,  0.64267025,  0.52603162,  0.02700457,  0.35551646,
        0.91767109,  0.81278229,  0.42350644,  0.18080031,  0.54226394,
        0.40956863,  0.22276582,  0.78965903,  0.26886159,  0.99498409,
        0.76069981,  0.93301929,  0.63728542,  0.12973435,  0.83809399,
        0.8987484 ,  0.17304771,  0.11100806,  0.25072063,  0.28029838,
        0.45652809,  0.24129956,  0.74703274,  0.40026525,  0.96246983,
        0.58436886,  0.94067858,  0.99323807,  0.0479487 ,  0.15912073,
        0.47725775,  0.84072111,  0.21345978,  0.62770547,  0.71699148,
        0.9719785 ,  0.70320095,  0.18359064,  0.22304724,  0.79366002,
        0.70447566,  0.96831723,  0.70891284,  0.93391373,  0.36573173,
        0.52962901,  0.41802372,  0.36472999,  0.11592169,  0.98216411,
        0.8483111 ,  0.45176093,  0.41126014,  0.67354496,  0.20129848,
        0.54080871,  0.13647585,  0.62698241,  0.28855942,  0.10721785,
        0.79556635,  0.85892357,  0.90684586,  0.2029532 ,  0.70288726,
        0.42485749,  0.45755353,  0.0864959 ,  0.46797903,  0.45650999,
        0.40802793,  0.10786699,  0.35616247,  0.08632778,  0.92271232,
        0.32538618,  0.33540734,  0.74038236,  0.48675584,  0.11864916,
        0.48350657,  0.44777144,  0.12474773,  0.60525879,  0.4163602 ,
        0.44493735,  0.15753321,  0.57881019,  0.1290074 ,  0.94653   ,
        0.81982637,  0.56956717,  0.23504455,  0.65453349,  0.62044266,
        0.20622561,  0.25027996,  0.82706137,  0.7463536 ,  0.00786243,
        0.20338535,  0.04685784,  0.42843642,  0.26588247,  0.44467407,
        0.10533087,  0.7455176 ,  0.51961778,  0.64785948,  0.47821985,
        0.4906166 ,  0.78579707,  0.1825172 ,  0.02351784,  0.28222304,
        0.26018713,  0.19664727,  0.84435269,  0.46399522,  0.33559803,
        0.09188102,  0.84248948,  0.97307177,  0.33070284,  0.49995383,
        0.1600345 ,  0.66082436,  0.08798937,  0.63710244,  0.23729756,
        0.50974399,  0.59293127,  0.34282262,  0.15708222,  0.33562378,
        0.20197171,  0.37760872,  0.80521565,  0.38425213,  0.40373291,
        0.08626248,  0.55163395,  0.30799836,  0.48256719,  0.63420997,
        0.06097733,  0.77111494,  0.10053694,  0.28965394,  0.96930033,
        0.19820935,  0.48713865,  0.54652766,  0.64303525,  0.87065376,
        0.61533859,  0.14008671,  0.15322358,  0.79193308,  0.70101326,
        0.90893239,  0.53493039,  0.16034081,  0.08255448,  0.21069641,
        0.64854687,  0.41969168,  0.40176158,  0.50423193,  0.22796341,
        0.09780674,  0.64939193,  0.47151591,  0.38483553,  0.9710714 ,
        0.90817497,  0.9338253 ,  0.70306186,  0.29314832,  0.33279197,
        0.1349627 ,  0.46608805,  0.50202286,  0.65885254,  0.08354539,
        0.70500743,  0.12944656,  0.83744131,  0.05589203,  0.41480593,
        0.30395762,  0.95515009,  0.00524327,  0.74641431,  0.03520255,
        0.54556704,  0.4141995 ,  0.16814615,  0.71391855,  0.92215194,
        0.09683506,  0.53526948,  0.9596323 ,  0.92733978,  0.59975944,
        0.69631747,  0.26382171,  0.34492907,  0.00286747,  0.9876624 ,
        0.29861762,  0.33162552,  0.88984804,  0.06271418,  0.09553803,
        0.81734142,  0.79516717,  0.60761829,  0.79140707,  0.61070179,
        0.36636707,  0.7575065 ,  0.94110523,  0.62666547,  0.85425158,
        0.85575406,  0.76296419,  0.50785892,  0.92307799,  0.90658235,
        0.23736445,  0.60617517,  0.41366896,  0.74224049,  0.64659023,
        0.51925904,  0.28963721,  0.36094226,  0.630282  ,  0.36939371,
        0.02779743,  0.29732291,  0.14973368,  0.8777326 ,  0.55862003,
        0.84605671,  0.34274004,  0.51507045,  0.31215362,  0.11745497,
        0.58634013,  0.35191391,  0.13626219,  0.36780183,  0.31569169,
        0.19737701,  0.14155997,  0.06963028,  0.66175741,  0.42040357,
        0.86911118,  0.34184138,  0.2799087 ,  0.49026873,  0.6418807 ,
        0.7431496 ,  0.34178546,  0.47737588,  0.09045118,  0.33138293,
        0.97645755,  0.12195952,  0.09964578,  0.43492051,  0.19963668,
        0.58673701,  0.41412193,  0.02460868,  0.46237089,  0.90468353,
        0.15013128,  0.83624827,  0.55904718,  0.23336076,  0.29162296,
        0.9876937 ,  0.92306744,  0.14106097,  0.27987109,  0.61274898,
        0.81627672,  0.85575338,  0.45839553,  0.83349574,  0.33379208,
        0.64149552,  0.89749155,  0.46961477,  0.92549815,  0.51802104,
        0.16149667,  0.07697057,  0.44225713,  0.89906823,  0.53669984,
        0.31098985,  0.91106656,  0.79967217,  0.9377872 ,  0.98210826,
        0.76427079,  0.5976335 ,  0.88658833,  0.82654322,  0.74345921,
        0.46750874,  0.40016302,  0.29594998,  0.32321663,  0.33163904,
        0.02447232,  0.57357086,  0.90276578,  0.28156828,  0.63912334,
        0.45641788,  0.51372224,  0.25829923,  0.638128  ,  0.68933684,
        0.65688595,  0.07808471,  0.57057117,  0.5059863 ,  0.45675772,
        0.73017308,  0.55810104,  0.82343963,  0.21905952,  0.89972929,
        0.42650421,  0.62309092,  0.74636659,  0.91632989,  0.66898985,
        0.52529719,  0.06528247,  0.29337442,  0.60140842,  0.1652211 ,
        0.64191202,  0.35347888,  0.54217465,  0.25432436,  0.82553752,
        0.91636068,  0.52758442,  0.37727349,  0.29453642,  0.45338147,
        0.57066902,  0.6233247 ,  0.54051042,  0.94151046,  0.65257393,
        0.31553501,  0.52418554,  0.65048288,  0.93734492,  0.27921717,
        0.26540578,  0.56677627,  0.73628451,  0.23434773,  0.29015906,
        0.87726405,  0.90102136,  0.2576227 ,  0.6822688 ,  0.78379844,
        0.85290843,  0.56690172,  0.11543935,  0.11162978,  0.32844978,
        0.62660908,  0.61842123,  0.58036888,  0.82552152,  0.63379024,
        0.20333913,  0.15636452,  0.77798623,  0.54720948,  0.85277522,
        0.73504998,  0.00438015,  0.11944804,  0.45729748,  0.12860722,
        0.8028838 ,  0.31957648,  0.47370032,  0.09600495,  0.94761959,
        0.62975191,  0.65739512,  0.91340673,  0.37813398,  0.3644985 ,
        0.94677075,  0.60669789,  0.17002128,  0.00661699,  0.76175159,
        0.01079081,  0.0241303 ,  0.0884653 ,  0.78232406,  0.35595651,
        0.37588742,  0.89990203,  0.510243  ,  0.76953241,  0.8501372 ,
        0.93512078,  0.40493098,  0.71449752,  0.17295127,  0.60076441,
        0.75074049,  0.83876256,  0.64660961,  0.88499681,  0.32563461,
        0.99378868,  0.28997318,  0.17577306,  0.94349164,  0.34429405,
        0.21885635,  0.70065925,  0.36601942,  0.80916483,  0.47999478,
        0.96904478,  0.98426708,  0.78756743,  0.47924796,  0.03876265,
        0.64961898,  0.03757636,  0.82038711,  0.29328604,  0.44393303,
        0.8924549 ,  0.2295665 ,  0.47993586,  0.72301028,  0.07089744,
        0.94447273,  0.15032231,  0.07461065,  0.60113621,  0.71183017,
        0.35984363,  0.82758893,  0.98825825,  0.64582446,  0.40119239,
        0.97370624,  0.70035331,  0.40833623,  0.20955011,  0.46777922,
        0.09340346,  0.05216137,  0.13605276,  0.79569179,  0.50708971,
        0.57699287,  0.85892726,  0.90465151,  0.26617316,  0.80037975,
        0.19373777,  0.46033321,  0.90915918,  0.02642945,  0.31097998,
        0.30933161,  0.17921015,  0.61888665,  0.81402141,  0.89858824,
        0.02600709,  0.76365491,  0.12179613,  0.62349611,  0.75578275,
        0.23119157,  0.40791236,  0.61529999,  0.17878495,  0.07723234,
        0.8946465 ,  0.75942525,  0.71364523,  0.5104815 ,  0.22206938,
        0.26266683,  0.3894149 ,  0.72015969,  0.59242705,  0.09275314,
        0.86681069]
		
		"""
		self.edges = [ 3,  2,  1,  0,  4,  5,  6,  7,  0,  1,  5,  4,  0,  4,  7,  3, 11,
       10,  9,  8, 12, 13, 14, 15,  8,  9, 13, 12,  1,  8, 12,  5,  2,  6,
       15, 11, 16, 19, 18, 17, 20, 21, 22, 23, 16, 17, 21, 20, 17, 18, 22,
       21,  9, 16, 20, 13, 10, 14, 23, 19, 24, 27, 26, 25, 28, 29, 30, 31,
       24, 28, 31, 27,  3,  7, 28, 24,  2, 25, 29,  6, 32, 35, 34, 33, 36,
       37, 38, 39, 25, 32, 36, 30, 26, 30, 39, 35, 10, 33, 37, 14, 11, 15,
       36, 32, 40, 43, 42, 41, 44, 45, 46, 47, 41, 42, 46, 45, 18, 41, 45,
       22, 19, 23, 44, 40, 33, 40, 44, 37, 34, 38, 47, 43, 48, 51, 50, 49,
       52, 53, 54, 55, 50, 54, 55, 51, 48, 52, 55, 51, 27, 31, 52, 48, 26,
       49, 53, 30, 56, 59, 58, 57, 60, 61, 62, 63, 58, 59, 63, 62, 49, 56,
       60, 53, 50, 54, 63, 59, 34, 57, 61, 38, 35, 39, 60, 56, 64, 67, 66,
       65, 68, 69, 70, 71, 65, 66, 70, 69, 66, 67, 71, 70, 57, 64, 68, 61,
       58, 62, 71, 67, 42, 65, 69, 46, 43, 47, 68, 64,  5, 12, 15,  6,  1,
        2, 11,  8, 13, 20, 23, 14,  9, 10, 19, 16,  6, 29, 28,  7,  2,  3,
       24, 25, 15, 14, 37, 36, 10, 11, 32, 33, 22, 45, 44, 23, 18, 19, 40,
       41, 25, 26, 35, 32, 29, 36, 39, 30, 37, 44, 47, 38, 33, 34, 43, 40,
       30, 53, 52, 31, 26, 27, 48, 49, 38, 61, 60, 39, 34, 35, 56, 57, 46,
       69, 68, 47, 42, 43, 64, 65, 53, 60, 63, 54, 49, 50, 59, 56, 61, 68,
       71, 62, 57, 58, 67, 64]
		"""
		
		norm = pd.read_csv("normals.csv").as_matrix()
		self.normals = []
		for i in norm:
			for j in range(4):
				self.normals.append(norm[i])
		self.normals = np.array(self.normals).reshape(-1)
		
		self.shader = Shader
		
		self.vertex_buffer = glGenBuffers(1)
		array_type = GLfloat * len(self.vertices)
		glBindBuffer(GL_ARRAY_BUFFER, self.vertex_buffer)
		glBufferData(GL_ARRAY_BUFFER, len(self.vertices) * 4, array_type(*self.vertices), GL_STATIC_DRAW)
		
		self.color_buffer = glGenBuffers(1)
		array_type = GLfloat * len(self.colors)
		glBindBuffer(GL_ARRAY_BUFFER, self.color_buffer)
		glBufferData(GL_ARRAY_BUFFER, len(self.colors) * 4, array_type(*self.colors), GL_STATIC_DRAW)
		
		self.normal_buffer = glGenBuffers(1)
		array_type = GLfloat * len(self.normals)
		glBindBuffer(GL_ARRAY_BUFFER, self.normal_buffer)
		glBufferData(GL_ARRAY_BUFFER, len(self.normals) * 4, array_type(*self.normals), GL_STATIC_DRAW)
		
	def rotate(self,angle,axis):
		self.model = glm.rotate(self.model, angle, axis)
		
	def translate(self,position):
		self.model = glm.translate(self.model, position)
	
	def mvp(self):
		return (params.projection() * params.view() * params.model())
		
	def render(self):
		light_color = glm.vec3(1.0,1.0,1.0)
		params.t = (params.t+1)%1000000000
		light_position = glm.vec3(5*math.sin(0.0002*params.t), -1.0, 5*math.cos(0.0002*params.t))

		glUseProgram(self.shader.ID)
		glUniformMatrix4fv(glGetUniformLocation(self.shader.ID, "MVP"), 1, GL_FALSE, glm.value_ptr(self.mvp()))
		glUniformMatrix4fv(glGetUniformLocation(self.shader.ID, "model"), 1, GL_FALSE, glm.value_ptr(params.model()))
		glUniform3f(glGetUniformLocation(self.shader.ID, "lightColor"), light_color.x, light_color.y,
		light_color.z)
		glUniform3f(glGetUniformLocation(self.shader.ID, "lightPosition"), light_position.x, light_position.y, light_position.z)
		glUniform3f(glGetUniformLocation(self.shader.ID, "viewPos"), params.position.x, params.position.y, params.position.z)

		#TODO: SEND UNIFORMS!
		
		
		glEnableVertexAttribArray(0)
		glBindBuffer(GL_ARRAY_BUFFER, self.vertex_buffer);
		glVertexAttribPointer(0, 3,	GL_FLOAT, GL_FALSE,	0, null)
		
		glEnableVertexAttribArray(1)
		glBindBuffer(GL_ARRAY_BUFFER, self.color_buffer);
		glVertexAttribPointer(1, 3,	GL_FLOAT, GL_FALSE,	0, null)
		
		glEnableVertexAttribArray(2)
		glBindBuffer(GL_ARRAY_BUFFER, self.normal_buffer);
		glVertexAttribPointer(2, 3,	GL_FLOAT, GL_FALSE,	0, null)
		
		# Draw the cube !
		glDrawArrays(GL_QUADS, 0, 312)
		glDisableVertexAttribArray(0)
		glDisableVertexAttribArray(1)
		glDisableVertexAttribArray(2)
		glEnable(GL_DEPTH_TEST)
		
	def release(self):
		glDeleteBuffers(1, [self.vertex_buffer])
		glDeleteBuffers(1, [self.color_buffer])
		glDeleteBuffers(1, [self.normal_buffer])
		print("Cube's buffers deleted")
